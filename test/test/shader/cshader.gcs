#version 430 core
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;


layout(std430, binding=0) buffer TriangleVertex{
	vec4 vertices[];
};

layout(std430, binding=1) buffer TriangleArea{
	float areas[];
};

void main(){
	uint h = gl_WorkGroupID.x;
	uint w = gl_WorkGroupID.y;
	uint k = gl_WorkGroupID.z;
	uint wNum = gl_NumWorkGroups.y;

	vec4 a = vertices[ ((h * wNum + w ) * 2 + k) * 3 + 0 ];
	vec4 b = vertices[ ((h * wNum + w ) * 2 + k) * 3 + 1 ];
	vec4 c = vertices[ ((h * wNum + w ) * 2 + k) * 3 + 2 ];

	vec3 v1 = vec3(b - a);
	vec3 v2 = vec3(c - a);

    areas[ (h * wNum + w ) * 2 + k] = length(cross(v1, v2)) / 2.0f;
}
