#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;

out vec3 FragPos;
out vec3 Normal;

layout(std140,binding=0) uniform Matrices{
	uniform mat4 projection;
	uniform mat4 view;
}
uniform mat4 modelBuffer;
uniform mat4 model;


void main(){
	gl_Position = model * modelBuffer * vec4(aPos, 1.0f);
	Normal = normalize(aNormal);
	FragPos = vec3(model * modelBuffer * vec4(aPos, 1.0f));
}
